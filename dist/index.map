{"version":3,"sources":["Cache/MemoryCache.ts","index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["import { ICache, ICachedItem} from './ICache'\n\ninterface IHash {\n    [key: string] : any;\n}\n\nexport class MemoryCache implements ICache {\n    private cache: IHash = {}\n    \n    constructor() {}\n    \n    public async get<T>(key: string): Promise<T> {\n        return this.cache[key]\n    }\n\n    public async set(key: string, item: any): Promise<void> {\n        this.cache[key] = item\n    }\n\n    public async delete(key: string) : Promise<void> {\n        delete this.cache[key]\n    }\n\n    public async clear(): Promise<void> {\n        this.cache = {}\n    }\n\n    public async size(): Promise<number> {\n        return Object.keys(this.cache).length\n    }\n}","import { MemoryCache } from './Cache/MemoryCache'\n\nexport { MemoryCache }"]}